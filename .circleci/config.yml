version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.8
      - image: neo4j:3.4.10-enterprise
        environment:
          NEO4J_AUTH: none
          NEO4J_HEAP_MEMORY: 256
          NEO4J_CACHE_MEMORY: 256M
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes

    working_directory: /go/src/github.com/Financial-Times/content-collection-rw-neo4j
    environment:
      CIRCLE_TEST_REPORTS: /tmp/test-reports
      CIRCLE_ARTIFACTS: /tmp/artifacts
      NEO4J_TEST_URL: "http://localhost:7474/db/data/"

    steps:
      - checkout
      - run:
          name: "Get build dependencies"
          command: |
            go get -u github.com/kardianos/govendor
            go get -u github.com/haya14busa/goverage
            govendor sync -v
      - run:
          name: "Build project"
          command: |
            govendor build -v
      - run:
          name: "Get tests dependencies"
          command: |
            go get -u github.com/jstemmer/go-junit-report
            go get -u github.com/mattn/goveralls
            wget https://raw.githubusercontent.com/Financial-Times/cookiecutter-upp-golang/master/coverage.sh && chmod +x coverage.sh
      - run:
          name: "Wait for Neo4j to start up"
          command: |
            wget --retry-connrefused --no-check-certificate -T 60 $NEO4J_TEST_URL; curl $NEO4J_TEST_URL
      - run:
          name: "Run tests"
          command: |
            mkdir -p $CIRCLE_TEST_REPORTS/golang
            mkdir -p $CIRCLE_ARTIFACTS
            govendor test -race -v +local | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
            goverage -covermode=atomic -race -coverprofile=${CIRCLE_ARTIFACTS}/coverage.out ./...
      - run:
          name: "Compute coverage"
          command: |
            goveralls -coverprofile=$CIRCLE_ARTIFACTS/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-reports

      - store_artifacts:
          path: /tmp/artifacts
          destination: build

  docker_build:
    working_directory: /content-collection-rw-neo4j
    docker:
      - image: docker:18.03
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .

workflows:
  version: 2
  tests_and_docker:
    jobs:
      - build
      - docker_build:
          requires:
            - build
